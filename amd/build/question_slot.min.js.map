{"version":3,"file":"question_slot.min.js","sources":["../src/question_slot.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Render the question slot template for each question in the offlinequiz edit view.\n *\n * @module     mod_offlinequiz/question_slot\n * @copyright  2021 Catalyst IT Australia Pty Ltd\n * @author     Guillermo Gomez Arias <guillermogomez@catalyst-au.net>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport {call as fetchMany} from 'core/ajax';\nimport Notification from 'core/notification';\nimport ModalFactory from 'core/modal_factory';\nimport ModalEvents from 'core/modal_events';\nimport * as str from 'core/str';\n\n/**\n * Set the question version for the slot.\n *\n * @param {Number} slotId\n * @param {Number} newVersion\n * @param {Boolean} canBeEdited Whether the forms were already created\n * @return {Array} The modified question version\n */\nconst setQuestionVersion = (slotId, newVersion, canBeEdited) => fetchMany([{\n    methodname: 'mod_offlinequiz_set_question_version',\n    args: {\n        slotid: slotId,\n        newversion: newVersion,\n        canbeedited: canBeEdited\n    }\n}])[0];\n\n/**\n * Replace the container with a new version.\n *\n * @param {bool} canbeedited  whether the question can be edited\n */\nconst registerEventListeners = (canbeedited) => {\n    document.addEventListener('change', e => {\n        if (!e.target.matches('[data-action=\"mod_offlinequiz-select_slot\"][data-slot-id]')) {\n            return;\n        }\n\n        const slotId = e.target.dataset.slotId;\n        const newVersion = parseInt(e.target.value);\n\n        setQuestionVersion(slotId, newVersion, canbeedited)\n            .then((response) => {\n                let message = new Object();\n                var langstrings = [\n                    {key: 'qversioncannotupdate', component: 'mod_offlinequiz'},\n                    {key: 'qversionupdated', component: 'mod_offlinequiz'},\n                    {key: 'qversionnumbersdiffer', component: 'mod_offlinequiz'},\n                    {key: 'qversionupdatedwarning', component: 'mod_offlinequiz'},\n                    {key: 'qversionupdateerror', component: 'mod_offlinequiz'},\n                ];\n                str.get_strings(langstrings).done(function(strings) {\n                    if (response.result) { // If the question was updated.\n                        // If the number of answers are the same but the forms are already created, we need a warning.\n                        if (!response.answersdiffer && !canbeedited) {\n                            message.title = strings[1];\n                            message.body = strings[3];\n                        } else {\n                            message.title = null;\n                        }\n                    } else {\n                        if (response.answersdiffer && !canbeedited) {\n                            // If the version was not updated because the numbers of answers differ and the forms are created.\n                            message.title = strings[0];\n                            message.body = strings[2];\n                        } else {\n                            // If the version was not updated because of some other error.\n                            message.title = strings[0];\n                            message.body = strings[4];\n                        }\n                    }\n\n                    if (message.title) {\n                        ModalFactory.create({\n                            type: ModalFactory.types.ALERT,\n                            title: message.title,\n                            body: message.body\n                        }).done(function(modal) {\n                            var root = modal.getRoot();\n                            root.on(ModalEvents.cancel, function() {\n                                location.reload(true);\n                            });\n                            modal.show();\n                        });\n                    } else {\n                        location.reload(true);\n                    }\n                });\n                return;\n            })\n            .catch(Notification.exception);\n    });\n};\n\n/** @property {Boolean} eventsRegistered If the event has been registered or not */\nlet eventsRegistered = false;\n\n/**\n * Entrypoint of the js.\n *\n * @param {number} slotid the id of the slot\n * @param {bool} canbeedited whether the forms have been created already\n */\nexport const init = (slotid, canbeedited) => {\n    if (eventsRegistered) {\n        return;\n    }\n\n    registerEventListeners(canbeedited);\n};\n"],"names":["registerEventListeners","canbeedited","document","addEventListener","e","target","matches","slotId","newVersion","canBeEdited","methodname","args","slotid","newversion","setQuestionVersion","dataset","parseInt","value","then","response","message","Object","str","get_strings","key","component","done","strings","result","answersdiffer","title","body","create","type","ModalFactory","types","ALERT","modal","getRoot","on","ModalEvents","cancel","location","reload","show","catch","Notification","exception"],"mappings":";;;;;;;;44BAoDMA,uBAA0BC,cAC5BC,SAASC,iBAAiB,UAAUC,QAC3BA,EAAEC,OAAOC,QAAQ,oEAhBH,EAACC,OAAQC,WAAYC,eAAgB,cAAU,CAAC,CACvEC,WAAY,uCACZC,KAAM,CACFC,OAAQL,OACRM,WAAYL,WACZP,YAAaQ,gBAEjB,GAgBIK,CAHeV,EAAEC,OAAOU,QAAQR,OACbS,SAASZ,EAAEC,OAAOY,OAEEhB,aAClCiB,MAAMC,eACCC,QAAU,IAAIC,OAQlBC,IAAIC,YAPc,CACd,CAACC,IAAK,uBAAwBC,UAAW,mBACzC,CAACD,IAAK,kBAAmBC,UAAW,mBACpC,CAACD,IAAK,wBAAyBC,UAAW,mBAC1C,CAACD,IAAK,yBAA0BC,UAAW,mBAC3C,CAACD,IAAK,sBAAuBC,UAAW,qBAEfC,MAAK,SAASC,SACnCR,SAASS,OAEJT,SAASU,eAAkB5B,YAI5BmB,QAAQU,MAAQ,MAHhBV,QAAQU,MAAQH,QAAQ,GACxBP,QAAQW,KAAOJ,QAAQ,IAKvBR,SAASU,gBAAkB5B,aAE3BmB,QAAQU,MAAQH,QAAQ,GACxBP,QAAQW,KAAOJ,QAAQ,KAGvBP,QAAQU,MAAQH,QAAQ,GACxBP,QAAQW,KAAOJ,QAAQ,IAI3BP,QAAQU,6BACKE,OAAO,CAChBC,KAAMC,uBAAaC,MAAMC,MACzBN,MAAOV,QAAQU,MACfC,KAAMX,QAAQW,OACfL,MAAK,SAASW,OACFA,MAAMC,UACZC,GAAGC,sBAAYC,QAAQ,WACxBC,SAASC,QAAO,MAEpBN,MAAMO,UAGVF,SAASC,QAAO,SAK3BE,MAAMC,sBAAaC,6BAaZ,CAACnC,OAAQX,eAKzBD,uBAAuBC"}